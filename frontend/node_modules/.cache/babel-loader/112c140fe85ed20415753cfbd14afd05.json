{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\dbs\\\\frontend\\\\src\\\\components\\\\bid-listing-item\\\\BidListingItem.jsx\";\nimport React from 'react';\nimport { Row, Col, Card, CardHeader, CardBody, Form, FormGroup } from 'reactstrap';\nimport { getAuthHeader, getAuthToken, getUserId } from '../../utils/Authorization';\nimport { withRouter } from 'react-router-dom';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass BidListingItem extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.handleChange = event => {\n      const {\n        value,\n        name\n      } = event.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.handleBid = event => {\n      event.preventDefault();\n      let authToken = getAuthToken();\n      let id = getUserId();\n      axios.post(\"http://localhost:3030/api/buyer/addBid\", {\n        id,\n        bid_amount: this.state.bidAmount,\n        status: \"waiting\",\n        buyer_id: id,\n        prod_listing_id: this.props.user._id\n      }, getAuthHeader(authToken)).then(res => {\n        this.props.bidsChanged();\n        this.props.clearListing();\n      }).catch(e => {\n        console.log(e);\n      });\n    };\n\n    this.state = {\n      bidAmount: ''\n    };\n  }\n\n  getProductName(id) {\n    let prod = this.props.products.filter(value => value._id === id);\n    if (prod.length > 0) return prod[0].productname;\n    return \"\";\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Card, {\n      className: \"shadow-lg mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n        className: \" d-flex justify-content-between align-items-center\",\n        children: /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"text-primary font-weight-bold m-0\",\n          children: [\"Listing Id: \", this.props.user._id]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(CardBody, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: [\"Status : \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: this.props.user.status === \"open\" ? \"green\" : \"red\",\n            children: this.props.user.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 53\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: [\"Product Name : \", this.getProductName(this.props.user.product_id)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: [\"Minimum Price : \", this.props.user.min_price]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"m-0\",\n          children: [\"Quantity : \", this.props.user.quantity]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          className: \"user\",\n          onSubmit: this.handleBid,\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: [/*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(FormGroup, {\n                children: /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"form-control form-control-user\",\n                  type: \"number\",\n                  step: \"0.01\",\n                  min: this.props.user.min_price,\n                  placeholder: \"Enter Bidding Price\",\n                  name: \"bidAmount\",\n                  onChange: this.handleChange,\n                  value: this.state.bidAmount,\n                  required: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Col, {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-success btn-block text-white btn-user\",\n                name: \"sub\",\n                type: \"submit\",\n                children: \"Place Bid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\n;\nexport default _c = withRouter(BidListingItem);\n\nvar _c;\n\n$RefreshReg$(_c, \"%default%\");","map":{"version":3,"sources":["D:/PROJECTS/dbs/frontend/src/components/bid-listing-item/BidListingItem.jsx"],"names":["React","Row","Col","Card","CardHeader","CardBody","Form","FormGroup","getAuthHeader","getAuthToken","getUserId","withRouter","axios","BidListingItem","Component","constructor","props","handleChange","event","value","name","target","setState","handleBid","preventDefault","authToken","id","post","bid_amount","state","bidAmount","status","buyer_id","prod_listing_id","user","_id","then","res","bidsChanged","clearListing","catch","e","console","log","getProductName","prod","products","filter","length","productname","render","product_id","min_price","quantity"],"mappings":"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","sourcesContent":["\nimport React from 'react';\nimport { Row,Col,Card, CardHeader , CardBody,Form,FormGroup} from 'reactstrap';\nimport { getAuthHeader, getAuthToken, getUserId } from '../../utils/Authorization';\nimport { withRouter } from 'react-router-dom';\n\nimport axios from 'axios';\n\n\nclass BidListingItem extends React.Component{\n    constructor(props)\n    {\n        super(props);\n        this.state = {\n            bidAmount : '',\n        }\n    }\n    handleChange = event => {\n        const {value,name} = event.target;\n        this.setState({[name] : value});\n    }\n\n    handleBid = event =>{\n        event.preventDefault();\n        let authToken = getAuthToken();\n        let id = getUserId();\n        axios.post(\"http://localhost:3030/api/buyer/addBid\",{id,bid_amount:this.state.bidAmount,status:\"waiting\",buyer_id:id,prod_listing_id:this.props.user._id},getAuthHeader(authToken)).then(res => {\n            this.props.bidsChanged();\n            this.props.clearListing();\n            }).catch(e=>{\n                console.log(e);\n            });\n    }\n\n    getProductName(id)\n    {\n        let prod = this.props.products.filter(value => value._id===id);\n        if(prod.length>0)\n            return prod[0].productname;\n        return \"\";\n    }\n\n    render(){\n\n        return(\n            \n            <Card className=\"shadow-lg mb-4\">\n                \n                    <CardHeader className=\" d-flex justify-content-between align-items-center\">\n                        <h6 className=\"text-primary font-weight-bold m-0\">Listing Id: {this.props.user._id}</h6>\n                       \n                        \n                    </CardHeader>\n                    <CardBody>\n                        <p className=\"m-0\">Status : <span className={this.props.user.status===\"open\"?\"green\":\"red\"}>{this.props.user.status}</span></p>\n                        <p className=\"m-0\">Product Name : {this.getProductName(this.props.user.product_id)}</p>\n                        <p className=\"m-0\">Minimum Price : {this.props.user.min_price}</p>\n                        <p className=\"m-0\">Quantity : {this.props.user.quantity}</p>\n                        \n                        <Form className=\"user\" onSubmit={this.handleBid}>\n                            <Row>\n                                <Col>\n                                    <FormGroup>\n                        \n                                    <input className=\"form-control form-control-user\" \n                                    type=\"number\"  \n                                    step=\"0.01\"\n                                    min={this.props.user.min_price}\n                                    placeholder=\"Enter Bidding Price\" \n                                    name=\"bidAmount\" \n                                    onChange={this.handleChange}\n                                    value={this.state.bidAmount}\n                                    required />\n                                </FormGroup>\n                                </Col>\n                                <Col>\n                                <button className=\"btn btn-success btn-block text-white btn-user\" name=\"sub\" type=\"submit\">Place Bid</button>\n                                </Col>\n                                \n                            </Row>\n                            \n                            \n                        </Form>\n                    </CardBody>\n             \n            </Card>\n        );\n    }\n};\n\nexport default withRouter(BidListingItem);"]},"metadata":{},"sourceType":"module"}